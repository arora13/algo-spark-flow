{
  "bubble_sort": [
    {
      "id": 1,
      "title": "Bubble Sort Basic Algorithm",
      "description": "Given an array of unsorted numbers, implement a basic bubble sorting algorithm which takes that input and orders the numbers from lowest to highest using that implementation",
      "input_desc": "An array of numbers arr (1 ≤ len(arr) ≤ 1000).",
      "output_desc": "A new array of numbers sorted from lowest to highest using bubble sort",
      "examples": [
        {
          "input": [6, 3, 2, 5, 9],
          "output": [2, 3, 5, 6, 9]
        },
        {
          "input": [75, 89, 35, 12, 9, 100],
          "output": [9, 12, 35, 75, 89, 100]
        }
      ],
      "constraints": [
        "The sorting must be done using bubble sort. Other sorting implementation will not suffice"
      ]
    },
    {
      "id": 2,
      "title": "Count swaps in Bubble Sort",
      "description": "Given an array of integers, implement a bubble sort algorithm which not only sorts the integers in ascending order, but also counts the amount of times a number was swapped during the sorting process. Return the number of swaps as an integer.",
      "input_desc": "An array of integers arr where 1 ≤ len(arr) ≤ 1000.",
      "output_desc": "An integer representing the total number of swaps the bubble sort algorithm performs to sort the array.",
      "examples": [
        {
          "input": [6, 3, 2, 5, 9],
          "output": 4
        },
        {
          "input": [75, 89, 35, 12, 9, 100],
          "output": 9
        }
      ],
      "constraints": [
        "You must implement bubble sort manually; built-in sorting functions like sorted() or .sort() are not allowed.",
        "Count every swap between neighboring elements."
      ]
    }
  ]
}
